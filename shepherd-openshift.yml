apiVersion: v1
kind: Template
labels:
  template: shepherd
message: |-
  This template will create a shepherd deployment.
metadata:
  annotations:
    iconClass: icon-drupal
    openshift.io/display-name: Shepherd
    description: Provide a template that deploys an instance of the shepherd distribution.
    tags: php,drupal
    template.openshift.io/documentation-url: https://gitlab.adelaide.edu.au/web-team/shepherd
    template.openshift.io/long-description: This template defines resources needed
      to run the Shepherd site manager.
    template.openshift.io/provider-display-name: University of Adelaide
    template.openshift.io/support-url: https://www.adelaide.edu.au
  name: shepherd
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name":"shepherd-db-svc","kind":"Service"}]'
    name: shepherd-web-svc
  spec:
    ports:
    - name: web
      port: 8080
      targetPort: 8080
    selector:
      name: shepherd-web-dc
- apiVersion: v1
  kind: Route
  metadata:
    name: shepherd-web-route
  spec:
    host: ${APPLICATION_DOMAIN}
    to:
      kind: Service
      name: shepherd-web-svc
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: shepherd-web-is
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: shepherd-web-bc
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: shepherd-web-is:latest
    postCommit: {}
    source:
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
      secrets:
      - destinationDir: .
        secret:
          name: ${SOURCE_SECRET}
      sourceSecret:
        name: ${SOURCE_SECRET}
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: uofa/s2i-shepherd-drupal
        pullSecret:
          name: ${SOURCE_SECRET}
        forcePull: true
      type: Source
    triggers:
    - type: ImageChange
    - type: ConfigChange
    - github:
        secret: ${GITHUB_TRIGGER_SECRET}
      type: GitHub
    - generic:
        secret: ${GENERIC_TRIGGER_SECRET}
      type: Generic
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: shepherd-web-shared
  spec:
    accessModes:
      - ReadWriteMany
    resources:
      requests:
        storage: 5Gi
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: shepherd-web-dc
  spec:
    replicas: 1
    selector:
      name: shepherd-web-dc
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/container.shepherd.image.entrypoint: '["/usr/local/s2i/run"]'
        labels:
          name: shepherd-web-dc
        name: shepherd-web-dc
      spec:
        containers:
        - env:
          - name: DATABASE_HOST
            value: ${DATABASE_HOST}
          - name: DATABASE_NAME
            value: ${DATABASE_NAME}
          - name: DATABASE_PASSWORD
            value: ${DATABASE_PASSWORD}
          - name: DATABASE_PORT
            value: ${DATABASE_PORT}
          - name: DATABASE_USER
            value: ${DATABASE_USER}
          - name: SITE_TITLE
            value: ${SITE_TITLE}
          - name: SITE_MAIL
            value: ${SITE_MAIL}
          - name: SITE_ADMIN_EMAIL
            value: ${SITE_ADMIN_EMAIL}
          - name: SITE_ADMIN_USERNAME
            value: ${SITE_ADMIN_USERNAME}
          - name: SITE_ADMIN_PASSWORD
            value: ${SITE_ADMIN_PASSWORD}
          - name: PRIVATE_DIR
            value: /code/private
          - name: PUBLIC_DIR
            value: /code/web/sites/default/files
          image: ' '
          name: shepherd-web
          ports:
          - containerPort: 8080
          resources:
            limits:
              memory: ${MEMORY_LIMIT_WEB}
          volumeMounts:
          - mountPath: /shared
            name: shepherd-web-shared
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext:
          runAsUser: 99010
          supplementalGroups:
            - 99010
        terminationGracePeriodSeconds: 30
        volumes:
        - name: shepherd-web-shared
          persistentVolumeClaim:
            claimName: shepherd-web-shared
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - shepherd-web
        from:
          kind: ImageStreamTag
          name: shepherd-web-is:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the database server
    name: shepherd-db-svc
  spec:
    ports:
    - name: mysql
      port: 3306
      targetPort: 3306
    selector:
      name: shepherd-db
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the database
    name: shepherd-db
  spec:
    replicas: 1
    selector:
      name: shepherd-db
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: shepherd-db
        name: shepherd-db
      spec:
        containers:
        - env:
          - name: MYSQL_DATABASE
            value: ${DATABASE_NAME}
          - name: MYSQL_PASSWORD
            value: ${DATABASE_PASSWORD}
          - name: MYSQL_USER
            value: ${DATABASE_USER}
          image: ''
          name: mysql
          ports:
          - containerPort: 3306
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - MYSQL_PWD='${DATABASE_PASSWORD}' mysql -h 127.0.0.1 -u ${DATABASE_USER}
                -D ${DATABASE_NAME} -e 'SELECT 1'
          resources:
            limits:
              memory: ${MEMORY_LIMIT_MYSQL}
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: shepherd-db-volume
        volumes:
        - emptyDir: {}
          name: shepherd-db-volume
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mysql
        from:
          kind: ImageStreamTag
          name: mariadb:latest
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
parameters:
- name: SOURCE_REPOSITORY_URL
  description: The URL of the repository with your application source code.
  required: true
  value: ssh://git@gitlab.adelaide.edu.au/web-team/shepherd.git
- name: SOURCE_REPOSITORY_REF
  description: Set this to a branch name, tag or other ref of your repository if you are not using the default branch.
  required: true
  value: develop
- name: SOURCE_SECRET
  description: Enter the name of the pre-created passwordless secret that allows you to checkout from gitlab.
  required: true
  value: build-key
- name: MEMORY_LIMIT_WEB
  description: Maximum amount of memory the web container can use.
  required: true
  value: 128Mi
- name: MEMORY_LIMIT_MYSQL
  description: Maximum amount of memory the MySQL container can use.
  displayName: Memory Limit (MySQL)
  required: true
  value: 256Mi
- name: APPLICATION_DOMAIN
  description: The exposed hostname that will route to the Drupal service, if left blank a value will be defaulted.
  displayName: Application Hostname
- name: DATABASE_HOST
  description: The database host to use. Change this if you do not wish to use the MySQL service deployed as part of this application.
  required: true
  value: shepherd-db-svc
- name: DATABASE_PORT
  required: true
  value: '3306'
- name: DATABASE_NAME
  required: true
  value: shepherd
- name: DATABASE_USER
  required: true
  value: shepherd
- name: DATABASE_PASSWORD
  from: '[a-zA-Z0-9]{16}'
  generate: expression
- name: SITE_TITLE
  description: The site title of Shepherd.
  required: true
  value: Shepherd
- name: SITE_MAIL
  description: The from address of outbound email from Shepherd.
  required: true
  value: shepherd@shepherd.com
- name: SITE_ADMIN_USERNAME
  description: The admin username.
  required: true
  value: admin
- name: SITE_ADMIN_PASSWORD
  description: The admin password.
  required: true
  from: '[a-zA-Z0-9]{8}'
  generate: expression
- name: SITE_ADMIN_EMAIL
  description: The admin users email address.
  required: true
  value: shepherd@shepherd.com
