---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: backupscheduleds.extension.shepherd
spec:
  group: extension.shepherd
  names:
    kind: BackupScheduled
    listKind: BackupScheduledList
    plural: backupscheduleds
    singular: backupscheduled
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: BackupScheduled is the Schema for the backupscheduleds API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackupScheduledSpec defines the desired state of BackupScheduled
            properties:
              mysql:
                additionalProperties:
                  description: SpecMySQL defines how to  MySQL.
                  properties:
                    secret:
                      description: Secret which will be used for connectivity.
                      properties:
                        keys:
                          description: Keys within secret to use for each parameter.
                          properties:
                            database:
                              description: Key which was applied to the application
                                for database connectivity.
                              type: string
                            hostname:
                              description: Key which was applied to the application
                                for database connectivity.
                              type: string
                            password:
                              description: Key which was applied to the application
                                for database connectivity.
                              type: string
                            port:
                              description: Key which was applied to the application
                                for database connectivity.
                              type: string
                            username:
                              description: Key which was applied to the application
                                for database connectivity.
                              type: string
                          required:
                          - database
                          - hostname
                          - password
                          - port
                          - username
                          type: object
                        name:
                          description: Name of secret containing the mysql connection
                            details.
                          type: string
                      required:
                      - keys
                      - name
                      type: object
                  required:
                  - secret
                  type: object
                description: MySQL databases which will be backed up.
                type: object
              retention:
                description: Retention defines how backup retention behavior.
                properties:
                  maxNumber:
                    description: MaxNumber is the maximum number of backups to retain.
                    type: integer
                type: object
              schedule:
                description: Schedule is the crontab statement which defines how often
                  a backup should run.
                properties:
                  concurrencyPolicy:
                    description: 'Specifies how to treat concurrent executions of
                      a Job. Valid values are: - "Allow" (default): allows CronJobs
                      to run concurrently; - "Forbid": forbids concurrent runs, skipping
                      next run if previous run hasn''t finished yet; - "Replace":
                      cancels currently running job and replaces it with a new one'
                    type: string
                  crontab:
                    description: The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
                    type: string
                  failedJobsHistoryLimit:
                    description: The number of failed finished jobs to retain. This
                      is a pointer to distinguish between explicit zero and not specified.
                    format: int32
                    type: integer
                  startingDeadlineSeconds:
                    description: Optional deadline in seconds for starting the job
                      if it misses scheduled time for any reason.  Missed jobs executions
                      will be counted as failed ones.
                    format: int64
                    type: integer
                  successfulJobsHistoryLimit:
                    description: The number of successful finished jobs to retain.
                      This is a pointer to distinguish between explicit zero and not
                      specified.
                    format: int32
                    type: integer
                  suspend:
                    description: This flag tells the controller to suspend subsequent
                      executions, it does not apply to already started executions.  Defaults
                      to false.
                    type: boolean
                required:
                - crontab
                type: object
              volumes:
                additionalProperties:
                  description: SpecVolume defines how to  volumes.
                  properties:
                    claimName:
                      description: ClaimName which will be backed up.
                      type: string
                  required:
                  - claimName
                  type: object
                description: Volumes which will be backed up.
                type: object
            required:
            - retention
            - schedule
            type: object
          status:
            description: ScheduledStatus defines the observed state of a scheduled
              object.
            properties:
              active:
                description: A list of pointers to currently running jobs.
                items:
                  description: 'ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, "must refer only to types A and B" or "UID not honored"
                    or "name must be restricted". Those cannot be well described when
                    embedded. 3. Inconsistent validation.  Because the usages are
                    different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don''t make new APIs embed an underspecified
                    API type they do not control. Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    .'
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
              lastExecutedTime:
                description: Information when was the last time the job was successfully
                  scheduled.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
