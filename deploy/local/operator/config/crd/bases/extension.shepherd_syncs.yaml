---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: syncs.extension.shepherd
spec:
  group: extension.shepherd
  names:
    kind: Sync
    listKind: SyncList
    plural: syncs
    singular: sync
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.restorePhase
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Sync is the Schema for the syncs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SyncSpec defines the desired state of Sync
            properties:
              backupEnv:
                type: string
              backupSpec:
                description: BackupSpec defines the desired state of Backup
                properties:
                  mysql:
                    additionalProperties:
                      description: SpecMySQL defines how to  MySQL.
                      properties:
                        secret:
                          description: Secret which will be used for connectivity.
                          properties:
                            keys:
                              description: Keys within secret to use for each parameter.
                              properties:
                                database:
                                  description: Key which was applied to the application
                                    for database connectivity.
                                  type: string
                                hostname:
                                  description: Key which was applied to the application
                                    for database connectivity.
                                  type: string
                                password:
                                  description: Key which was applied to the application
                                    for database connectivity.
                                  type: string
                                port:
                                  description: Key which was applied to the application
                                    for database connectivity.
                                  type: string
                                username:
                                  description: Key which was applied to the application
                                    for database connectivity.
                                  type: string
                              required:
                              - database
                              - hostname
                              - password
                              - port
                              - username
                              type: object
                            name:
                              description: Name of secret containing the mysql connection
                                details.
                              type: string
                          required:
                          - keys
                          - name
                          type: object
                      required:
                      - secret
                      type: object
                    description: MySQL databases which will be backed up.
                    type: object
                  volumes:
                    additionalProperties:
                      description: SpecVolume defines how to  volumes.
                      properties:
                        claimName:
                          description: ClaimName which will be backed up.
                          type: string
                      required:
                      - claimName
                      type: object
                    description: Volumes which will be backed up.
                    type: object
                type: object
              restoreEnv:
                type: string
              restoreSpec:
                description: We can use the backup spec for the restore spec as we
                  just need volumes/dbs.
                properties:
                  mysql:
                    additionalProperties:
                      description: SpecMySQL defines how to  MySQL.
                      properties:
                        secret:
                          description: Secret which will be used for connectivity.
                          properties:
                            keys:
                              description: Keys within secret to use for each parameter.
                              properties:
                                database:
                                  description: Key which was applied to the application
                                    for database connectivity.
                                  type: string
                                hostname:
                                  description: Key which was applied to the application
                                    for database connectivity.
                                  type: string
                                password:
                                  description: Key which was applied to the application
                                    for database connectivity.
                                  type: string
                                port:
                                  description: Key which was applied to the application
                                    for database connectivity.
                                  type: string
                                username:
                                  description: Key which was applied to the application
                                    for database connectivity.
                                  type: string
                              required:
                              - database
                              - hostname
                              - password
                              - port
                              - username
                              type: object
                            name:
                              description: Name of secret containing the mysql connection
                                details.
                              type: string
                          required:
                          - keys
                          - name
                          type: object
                      required:
                      - secret
                      type: object
                    description: MySQL databases which will be backed up.
                    type: object
                  volumes:
                    additionalProperties:
                      description: SpecVolume defines how to  volumes.
                      properties:
                        claimName:
                          description: ClaimName which will be backed up.
                          type: string
                      required:
                      - claimName
                      type: object
                    description: Volumes which will be backed up.
                    type: object
                type: object
              site:
                description: Correlates to node ids in shepherd.
                type: string
            required:
            - backupEnv
            - backupSpec
            - restoreEnv
            - restoreSpec
            - site
            type: object
          status:
            description: SyncStatus defines the observed state of Sync
            properties:
              backup:
                description: SyncStatusBackup defines the observed state of a Backup
                  during a Sync.
                properties:
                  name:
                    type: string
                  phase:
                    type: string
                  startTime:
                    format: date-time
                    type: string
                required:
                - phase
                type: object
              restore:
                description: SyncStatusRestore defines the observed state of a Restore
                  during a Sync.
                properties:
                  completionTime:
                    format: date-time
                    type: string
                  name:
                    type: string
                  phase:
                    type: string
                required:
                - phase
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
