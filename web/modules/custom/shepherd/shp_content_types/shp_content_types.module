<?php

/**
 * @file
 * Contains shp_content_types.module.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\node\NodeInterface;
use Drupal\node\Entity\Node;
use Drupal\Core\Datetime\DrupalDateTime;

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function shp_content_types_node_presave(NodeInterface $node) {
  if ($node->bundle() === 'shp_environment') {
    // Set title to new environment's domain/path.
    $node->setTitle($node->field_shp_domain->value . $node->field_shp_path->value);
  }
}

/**
 * Implements hook_entity_bundle_field_info_alter().
 */
function shp_content_types_entity_bundle_field_info_alter(&$fields, EntityTypeInterface $entity_type, $bundle) {
  if ($bundle === 'shp_site') {
    if (isset($fields['field_shp_domain'])) {
      $fields['field_shp_domain']->addConstraint('ComboUniqueField', ['fields' => ['field_shp_path']]);
      $fields['field_shp_domain']->addConstraint('Domain', []);
    }
    if (isset($fields['field_shp_path'])) {
      $fields['field_shp_path']->addConstraint('Path', []);
    }
    if (isset($fields['field_shp_short_name'])) {
      $fields['field_shp_short_name']->addConstraint('ComboUniqueField', ['fields' => ['field_shp_path']]);
    }
  }
  elseif ($bundle === 'shp_environment') {
    if (isset($fields['field_shp_domain'])) {
      $fields['field_shp_domain']->addConstraint('Domain', []);
    }
    if (isset($fields['field_shp_env_vars'])) {
      $fields['field_shp_env_vars']->addConstraint('EnvironmentVariableName',
        []);
    }
    if (isset($fields['field_shp_path'])) {
      $fields['field_shp_path']->addConstraint('Path', []);
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function shp_content_types_preprocess_page_title(&$variables) {
  $params = \Drupal::routeMatch()->getParameters();
  $views = [
    'shp_site_environments' => 'Environments',
    'shp_site_users'        => 'Users',
  ];

  if (in_array($params->get('view_id'), array_keys($views))) {
    $node = Node::load($params->get('node'));
    $site_title = $node->getTitle();
    // Sets the page title for site(s) pages.
    $variables['title']['#markup'] = $site_title . ' - ' . $views[$params->get('view_id')];
    // Get the url path.
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function shp_content_types_node_insert(NodeInterface $node) {
  $type = $node->getType();
  switch ($type) {
    case 'shp_site':
      \Drupal::service('shp_content_types.group_manager')->create($node);
      \Drupal::service('shp_content_types.group_manager')->addSiteToProjectGroup($node);
      break;

    case 'shp_project':
      \Drupal::service('shp_content_types.group_manager')->create($node);
      break;
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function shp_content_types_node_delete(NodeInterface $node) {
  if ($node->getType() === 'shp_site' || $node->getType() === 'shp_project') {
    \Drupal::service('shp_content_types.group_manager')->delete($node);
  }
}
